diff a/src/jdk.jfr/share/classes/jdk/jfr/internal/PrivateAccess.java b/src/jdk.jfr/share/classes/jdk/jfr/internal/PrivateAccess.java
--- a/src/jdk.jfr/share/classes/jdk/jfr/internal/PrivateAccess.java
+++ b/src/jdk.jfr/share/classes/jdk/jfr/internal/PrivateAccess.java
@@ -1,7 +1,7 @@
 /*
- * Copyright (c) 2016, 2023, Oracle and/or its affiliates. All rights reserved.
+ * Copyright (c) 2016, 2025, Oracle and/or its affiliates. All rights reserved.
  * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
  *
  * This code is free software; you can redistribute it and/or modify it
  * under the terms of the GNU General Public License version 2 only, as
  * published by the Free Software Foundation.  Oracle designates this
@@ -23,21 +23,19 @@
  * questions.
  */
 
 package jdk.jfr.internal;
 
-import java.security.AccessControlContext;
 import java.util.List;
 import java.util.Map;
 
 import jdk.jfr.AnnotationElement;
 import jdk.jfr.Configuration;
 import jdk.jfr.EventSettings;
 import jdk.jfr.EventType;
 import jdk.jfr.FlightRecorderPermission;
 import jdk.jfr.Recording;
-import jdk.jfr.SettingControl;
 import jdk.jfr.SettingDescriptor;
 import jdk.jfr.ValueDescriptor;
 import jdk.jfr.internal.management.EventSettingsModifier;
 
 /**
@@ -58,11 +56,11 @@
         // deadlock with FlightRecorderPermission.<clinit>
         if (instance == null) {
             // Will trigger
             // FlightRecorderPermission.<clinit>
             // which will call PrivateAccess.setPrivateAccess
-            new FlightRecorderPermission(SecuritySupport.REGISTER_EVENT);
+            new FlightRecorderPermission("accessFlightRecorder");
         }
         return instance;
     }
 
     public static void setPrivateAccess(PrivateAccess pa) {
@@ -97,12 +95,9 @@
 
     public abstract boolean isUnsigned(ValueDescriptor v);
 
     public abstract PlatformRecorder getPlatformRecorder();
 
-    @SuppressWarnings("removal")
-    public abstract AccessControlContext getContext(SettingControl sc);
-
     public abstract EventSettings newEventSettings(EventSettingsModifier esm);
 
     public abstract boolean isVisible(EventType t);
 }
