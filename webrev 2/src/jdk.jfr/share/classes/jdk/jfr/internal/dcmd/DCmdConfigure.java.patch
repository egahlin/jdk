diff a/src/jdk.jfr/share/classes/jdk/jfr/internal/dcmd/DCmdConfigure.java b/src/jdk.jfr/share/classes/jdk/jfr/internal/dcmd/DCmdConfigure.java
--- a/src/jdk.jfr/share/classes/jdk/jfr/internal/dcmd/DCmdConfigure.java
+++ b/src/jdk.jfr/share/classes/jdk/jfr/internal/dcmd/DCmdConfigure.java
@@ -1,7 +1,7 @@
 /*
- * Copyright (c) 2016, 2024, Oracle and/or its affiliates. All rights reserved.
+ * Copyright (c) 2016, 2025, Oracle and/or its affiliates. All rights reserved.
  * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
  *
  * This code is free software; you can redistribute it and/or modify it
  * under the terms of the GNU General Public License version 2 only, as
  * published by the Free Software Foundation.  Oracle designates this
@@ -24,19 +24,19 @@
  */
 
 package jdk.jfr.internal.dcmd;
 
 import java.io.IOException;
+import java.nio.file.Path;
 
 import jdk.jfr.FlightRecorder;
 import jdk.jfr.internal.LogLevel;
 import jdk.jfr.internal.LogTag;
 import jdk.jfr.internal.Logger;
 import jdk.jfr.internal.Options;
 import jdk.jfr.internal.PrivateAccess;
 import jdk.jfr.internal.Repository;
-import jdk.jfr.internal.SecuritySupport.SafePath;
 
 /**
  * JFR.configure - invoked from native
  *
  */
@@ -87,11 +87,11 @@
 
 
         boolean updated = false;
         if (repositoryPath != null) {
             try {
-                SafePath s = new SafePath(repositoryPath);
+                Path s = Path.of(repositoryPath);
                 if (FlightRecorder.isInitialized()) {
                     PrivateAccess.getInstance().getPlatformRecorder().migrate(s);
                 } else {
                     Repository.getRepository().setBasePath(s);
                 }
@@ -113,11 +113,11 @@
             updated = true;
         }
 
         if (dumpPath != null)  {
             try {
-                Options.setDumpPath(new SafePath(dumpPath));
+                Options.setDumpPath(Path.of(dumpPath));
             } catch (IOException e) {
                 throw new DCmdException("Could not set " + dumpPath + " to emergency dump path. " + e.getMessage(), e);
             }
             Logger.log(LogTag.JFR, LogLevel.INFO, "Emergency dump path set to " + dumpPath);
            if (verbose) {
